"""init

Revision ID: 4cf8b78853e7
Revises: 
Create Date: 2019-10-22 22:14:35.497734

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4cf8b78853e7'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address1', sa.String(length=255), nullable=True),
    sa.Column('address2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('zipcode', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_addresses'))
    )
    op.create_index('idx_addresses_on_city', 'addresses', ['city'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.Column('event_dt', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_events'))
    )
    op.create_index('idx_events_on_event_dt', 'events', ['event_dt'], unique=False)
    op.create_index('idx_events_on_venue_id', 'events', ['venue_id'], unique=False)
    op.create_table('seats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.Column('section', sa.String(length=255), nullable=True),
    sa.Column('rownum', sa.String(length=255), nullable=True),
    sa.Column('seat', sa.String(length=255), nullable=True),
    sa.Column('best_rank', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_seats'))
    )
    op.create_index('idx_seats_on_venue_id', 'seats', ['venue_id'], unique=False)
    op.create_table('seed',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('section', sa.String(length=255), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('rownum', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('event_id', name=op.f('pk_seed'))
    )
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_data', sa.String(length=255), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('referral', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sessions'))
    )
    op.execute('''CREATE TABLE tickets
            (
              event_id INT NOT NULL,
              section VARCHAR(255),
              rownum VARCHAR(255),
              seat VARCHAR(255),
              price DECIMAL(8, 2) DEFAULT 0.00 NOT NULL,
              seller_id INT NOT NULL,
              status SMALLINT,
              created_at DATETIME DEFAULT NOW(),
              updated_at DATETIME DEFAULT NOW(),
              PRIMARY KEY (event_id, section, rownum, seat, status),
              INDEX idx_tickets_on_event_id (event_id))
              PARTITION BY LIST( status ) (
              PARTITION p_active VALUES IN (1),
              PARTITION p_inactive VALUES IN (0),
              PARTITION p_onhold VALUES IN (2)
       );''')
    op.create_table('venues',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_venues'))
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('venues')
    op.drop_index('idx_tickets_on_event_id', table_name='tickets')
    op.drop_table('tickets')
    op.drop_table('sessions')
    op.drop_table('seed')
    op.drop_index('idx_seats_on_venue_id', table_name='seats')
    op.drop_table('seats')
    op.drop_index('idx_events_on_venue_id', table_name='events')
    op.drop_index('idx_events_on_event_dt', table_name='events')
    op.drop_table('events')
    op.drop_index('idx_addresses_on_city', table_name='addresses')
    op.drop_table('addresses')
    # ### end Alembic commands ###
